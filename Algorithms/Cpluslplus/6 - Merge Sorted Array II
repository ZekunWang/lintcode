/*
Merge two given sorted integer array A and B into a new sorted integer array.

Example
A=[1,2,3,4]

B=[2,4,5,6]

return [1,2,2,3,4,4,5,6]

Challenge
How can you optimize your algorithm if one array is very large and the other is very small?
*/

#include <vector>
using namespace std;

class Solution {
public:
    /**
     * @param A and B: sorted integer array A and B.
     * @return: A new sorted integer array
     */
    vector<int> mergeSortedArray(vector<int> &A, vector<int> &B) {
        int szA(A.size() - 1), szB(B.size() - 1), szR(szA + szB + 1);
        vector<int> res(szR + 1, 0);
        while(szA >= 0 && szB >= 0){
            res[szR--] = A[szA] <= B[szB] ? B[szB--] : A[szA--];
        }
        while(szA >= 0){
            res[szR--] = A[szA--];
        }
        while(szB >= 0){
            res[szR--] = B[szB--];
        }
        return res;
    }
};
