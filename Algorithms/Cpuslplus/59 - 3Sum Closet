/*
Given an array S of n integers, find three integers in S such that the sum is closest to a given number, target. 
Return the sum of the three integers.

Example
For example, given array S = {-1 2 1 -4}, and target = 1. The sum that is closest to the target is 2. (-1 + 2 + 1 = 2).

Note
You may assume that each input would have exactly one solution.

Challenge
O(n^2) time, O(1) extra space
*/

#include <iostream>
#include <vector>
using namespace std;

class Solution {
public:    
    /**
     * @param numbers: Give an array numbers of n integer
     * @param target: An integer
     * @return: return the sum of the three integers, the sum closest target.
     */
    int threeSumClosest(vector<int> nums, int target) {
        if(nums.size() < 3) return -1;
        sort(nums.begin(), nums.end());
        int diff(INT_MAX), res;
        for(int i = 0; i < nums.size() - 2; i++){
            int j(i + 1), k(nums.size() - 1);
            int tg(target - nums[i]);
            while(j < k){
                int tmp = nums[j] + nums[k], tdiff = abs(tg - tmp);
                if(tdiff < diff){
                    diff = tdiff;
                    res = tmp + nums[i];
                }
                if(tmp == tg) return target;
                else if(tmp < tg) j++;
                else k--;
            }
        }
        return res;
    }
};
