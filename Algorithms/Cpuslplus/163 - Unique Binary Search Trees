/*
Given n, how many structurally unique BSTs (binary search trees) that store values 1...n?

Example
Given n = 3, there are a total of 5 unique BST's.

1           3    3       2      1
 \         /    /       / \      \
  3      2     1       1   3      2
 /      /       \                  \
2     1          2                  3
*/

#include <iostream>
#include <unordered_map>
using namespace std;

class Solution {
    unordered_map<int, int> m;
public:
    /**
     * @paramn n: An integer
     * @return: An integer
     */
    int numTrees(int n) {
        m[1] = m[0] = 1;
        for(int i = 2; i <= n; i++){
            int sum(0), j(0);
            for(; j < i / 2; j++)
                sum += m[j] * m[i - j - 1];
            sum *= 2;
            if(i % 2) sum += m[j] * m[i - j - 1];
            m[i] = sum;
        }
        return m[n];
    }
};
