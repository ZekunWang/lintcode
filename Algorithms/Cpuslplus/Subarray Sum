/*
Given an integer array, find a subarray where the sum of numbers is zero. Your 
code should return the index of the first number and the index of the last number.

Example
Given [-3, 1, 2, -3, 4], return [0, 2] or [1, 3].
Note
There is at least one subarray that it's sum equals to zero.
*/

#include <iostream>
#include <vector>
using namespace std;

class Solution {
public:
    /**
     * @param nums: A list of integers
     * @return: A list of integers includes the index of the first number 
     *          and the index of the last number
     */
    vector<int> subarraySum(vector<int> nums){
        vector<int> v(2, 0);
        for(int i = 0; i < nums.size(); i++){
            int sum(0);
            for(int j = i; j < nums.size(); j++){
                sum += nums[j];
                if(!sum){
                    v[0] = i, v[1] = j;
                    return v;
                }
            }
        }
    }
};
