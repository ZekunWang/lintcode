/*
Given an array of strings, return all groups of strings that are anagrams.

Example
Given ["lint", "intl", "inlt", "code"], return ["lint", "inlt", "intl"].

Given ["ab", "ba", "cd", "dc", "e"], return ["ab", "ba", "cd", "dc"].

Note
All inputs will be in lower-case
*/

#include <iostream>
#include <unordered_map>
#include <string>
#include <vector>
using namespace std;

class Solution {
public:    
    /**
     * @param strs: A list of strings
     * @return: A list of strings
     */
    vector<string> v;
    vector<string> anagrams(vector<string> &strs) {
        vector<string> t(strs);
        unordered_map<string, int> m;
        for(int i = 0; i < strs.size(); i++){
            sort(t[i].begin(), t[i].end());
            m[t[i]]++;
        }
        for(int i = 0; i < strs.size(); i++)
            if(m[t[i]] > 1) v.push_back(strs[i]);
        return v;
    }
};
