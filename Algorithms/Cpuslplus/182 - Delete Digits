/*
Given string A representative a positive integer which has N digits, remove any k digits of the number, 
the remaining digits are arranged according to the original order to become a new positive integer.

Find the smallest integer after remove k digits.
N <= 240 and k <= N,

Example
Given an integer A = "178542", k = 4
return a string "12"
*/

#include <iostream>
#include <string>
using namespace std;

class Solution {
public:
    /**
     *@param A: A positive integer which has N digits, A is a string.
     *@param k: Remove k digits.
     *@return: A string
     */
    string DeleteDigits(string A, int k) {
        if(!A.length() || !k) return A;
        while(k--){
            int i(0), j(0), sz(A.length());
            while(i < sz - 1 && A[i] <= A[i + 1]) i++;
            if(i == 0 && A[1] == '0')
                for(j = 1; j < sz - 1; j++)
                    if(A[j + 1] != '0') break;
            string s2;
            if(i < sz - 1) s2 = A.substr(i + 1, sz - i - 1);
            A = A.substr(0, i) + s2;
            if(A[0] == '0'){
                i = 0;
                while(i < A.length() && A[i] == '0') i++;
                A = A.substr(i);
            }
        }
        return A;
    }
};
