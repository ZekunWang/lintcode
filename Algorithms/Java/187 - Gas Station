/*
There are N gas stations along a circular route, where the amount of gas at station i is gas[i].

You have a car with an unlimited gas tank and it costs cost[i] of gas to travel from station i to its next station (i+1). 
You begin the journey with an empty tank at one of the gas stations.

Return the starting gas station's index if you can travel around the circuit once, otherwise return -1.

Example
Given 4 gas stations with gas[i]=[1,1,3,1], and the cost[i]=[2,2,1,1]. The starting gas station's index is 2.

Note
The solution is guaranteed to be unique.

Challenge
O(n) time and O(1) extra space
*/

public class Solution {
    /**
     * @param gas: an array of integers
     * @param cost: an array of integers
     * @return: an integer
     */
    public int canCompleteCircuit(int[] gas, int[] cost) {
        int sum = 0, tmp = 0, idx = -1;
        for(int i = 0; i < gas.length; i++){
            tmp += gas[i] - cost[i];
            if(tmp < 0){
                idx = -1;
                sum += tmp;
                tmp = 0;
            }else if(idx == -1) idx = i;
        }
        return sum + tmp >= 0 ? idx : -1;
    }
}
