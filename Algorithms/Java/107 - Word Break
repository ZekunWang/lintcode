/*
Given a string s and a dictionary of words dict, determine if s can be 
break into a space-separated sequence of one or more dictionary words.

Example
Given s = "lintcode", dict = ["lint", "code"].

Return true because "lintcode" can be break as "lint code".
*/

public class Solution {
    /**
     * @param s: A string s
     * @param dict: A dictionary of words dict
     */
    public boolean wordBreak(String s, Set<String> dict) {
        return solution1(s, dict);
    }
    public boolean solution1(String s, Set<String> dict){
        if(s == null || dict == null) return false;
        int sz = s.length(), maxLen = 0;
        if(sz == 0) return true;
        for(String st : dict) maxLen = Math.max(maxLen, st.length());
        boolean[] chk = new boolean[sz + 1];
        chk[0] = true;
        for(int i = 1; i <= sz; i++){
            for(int j = i - 1; j >= 0 && i - j <= maxLen; j--){
                if(chk[j] && dict.contains(s.substring(j, i))){
                    chk[i] = true;
                    break;
                }
            }
        }
        return chk[sz];
    }
}
