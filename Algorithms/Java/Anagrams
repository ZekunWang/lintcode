/*
Given an array of strings, return all groups of strings that are anagrams.

Example
Given ["lint", "intl", "inlt", "code"], return ["lint", "inlt", "intl"].

Given ["ab", "ba", "cd", "dc", "e"], return ["ab", "ba", "cd", "dc"].

Note
All inputs will be in lower-case
*/

import java.util.*;

public class Solution {
    /**
     * @param strs: A list of strings
     * @return: A list of strings
     */
    public List<String> anagrams(String[] strs) {
        LinkedList<String> res = new LinkedList<String>();
        HashMap<String, Integer> hm = new HashMap<String, Integer>();
        String[] chk = new String[strs.length];
        for(int i = 0; i < strs.length; i++){
            char[] c = strs[i].toCharArray();
            Arrays.sort(c);
            String s = new String(c);
            chk[i] = s;
            if(hm.containsKey(s) == true)
                hm.put(s, hm.get(s) + 1);
            else hm.put(s, 1);
        }
        for(int i = 0; i < strs.length; i++)
            if(hm.get(chk[i]) > 1) res.add(strs[i]);
        return res;
    }
}
