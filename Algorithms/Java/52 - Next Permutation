/*
Given a list of integers, which denote a permutation.
Find the next permutation in ascending order.

Example
For [1,3,2,3], the next permutation is [1,3,3,2]

For [4,3,2,1], the next permutation is [1,2,3,4]

Note
The list may contains duplicate integers.
*/

public class Solution {
    /**
     * @param nums: an array of integers
     * @return: return nothing (void), do not return anything, modify nums in-place instead
     */
    public int[] nextPermutation(int[] nums) {
        if(nums == null || nums.length < 2) return nums;
        //return solution1(nums, 0, nums.length - 1);
        return solution2(nums);
    }
    //check forward
    public int[] solution1(int[] nums, int lo, int hi){
        int peak = lo;
        while(peak < hi && nums[peak] <= nums[peak+1]) peak++; //get peak
        int bot = peak;
        while(bot < hi && nums[bot] >= nums[bot+1]) bot++;  //get bot
        if(bot != hi) return solution1(nums, bot, hi); //not fully decending
        if(peak != lo){
            int mn = nums[peak], pos = peak, tmp = nums[peak-1];
            for(int i = peak; i <= hi; i++){ //find min num >= nums[peak-1]
                int cur = nums[i];
                if(cur > tmp && cur < mn){
                    mn = cur;
                    pos = i;
                }
            }
            nums[peak-1] = mn;
            nums[pos] = tmp;
        }
        reverse(nums, peak, hi); //or use Arrays.sort
        return nums;
    }
    //check backward
    public int[] solution2(int[] nums){
        int hi = nums.length - 1;
        for(int i = hi - 1; i >= 0; i--){
            if(nums[i] < nums[i + 1]){
                int j = hi;
                while(j > i && nums[j] <= nums[i]) j--;
                swap(nums, i, j);
                reverse(nums, i + 1, hi);
                return nums;
            }
        }
        reverse(nums, 0, hi);
        return nums;
    }
    public void reverse(int[] nums, int lo, int hi){
        for(int i = lo, j = hi; i < j; i++, j--)
            swap(nums, i, j);
    }
    public void swap(int[] nums, int i, int j){
        int tmp = nums[i];
        nums[i] = nums[j];
        nums[j] = tmp;
    }
}
